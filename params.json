{"tagline":"Adobe Air Tap for Tap Plugin","body":"# Tap for Tap Adobe Air Native Extension\r\n\r\nWant to use Tap for Tap with Adobe Air? We got you covered on Android and iOS (+ iPhone simulator).\r\n\r\n## Preamble\r\nThis Application Native Extension was built using Adobe Air 3.5 SDK.\r\n\r\n### Minimum Requirements\r\n#### Android\r\n  - None\r\n\r\n#### iPhone\r\n  - An OS X machine running Lion (10.7)\r\n  - iOS 6.0 SDK\r\n\r\nNote that the iPhone app cannot be built on a Windows machine using the Adobe Flex 4.6 SDK.\r\nThe iOS SDK included with Adobe Flex is too old.\r\n\r\n\r\n## Setup\r\nIf you don't have the native extension yet then head over to the [downloads page](https://github.com/tapfortap/AdobeAir/downloads).\r\n\r\nInstalling the Tap for Tap native extension is easy. This isn't an Adobe Air \r\nor Adobe Flash Builder tutorial so we assume that you have a Flex Mobile project\r\nalready set up and working. All you need to do is add the `tapfortap.ane` file to\r\nyour project. If you do not know how to add a native extension there is a brief\r\nexplanation below\r\n\r\n\r\n### Flash Builder 4.6\r\n\r\n#### Adding the Native Extension to the Project\r\n\r\n1. Right click on your project and select properties.\r\n2. Click `Flex Build Path` in the left hand list.\r\n3. Click the `Native Extensions` tab\r\n4. Click the `Add ANE...` button on the right hand side\r\n5. Browse to where you downloaded the Tap for Tap native extenion abd select `tapfortap.ane` and open it\r\n\r\n#### Setup Building for iOS\r\n\r\nRemember that building for iPhone requires iOS SDK 6 (i.e. it must be built \r\non a machine running at least OS X Lion 10.7)\r\n\r\n1. Right click on your project and select properties.\r\n2. Expand `Flex Build Packaging` on the left hand menu\r\n3. Click on `Apple iOS` on the left hand menu\r\n4. Check `Enable this target platform` box\r\n5. Click on the `Digital Signature` tab and provide your `Certificate` and `Provisioning file`\r\n6. Click on the `Native Extensions` tab\r\n7. Check the box under the `Package` column\r\n8. Add the path to the iPhone 6 SDK\r\n\r\n#### Setup Building for Android\r\n1. Right click on your project and select properties.\r\n2. Expand `Flex Build Packaging` on the left hand menu\r\n3. Click on `Google Android` on the left hand menu\r\n4. Check `Enable this target platform` box\r\n5. Click on the `Digital Signature` tab and provide your `Certificate`\r\n6. Click on the `Native Extensions` tab\r\n7. Check the box under the `Package` column\r\n8. Add the following permissions to the app.xml\r\n  - `<uses-permission android:name=\"android.permission.INTERNET\" />`\r\n  - `<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />`\r\n  - `<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />`\r\n  - `<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />`\r\n  - `<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />`\r\n10. Include the TapForTap activity in the `app.xml`\r\n  - `<activity android:name=\"com.tapfortap.TapForTapActivity\"/>`\r\n\r\n### Setup building with the Command Line or Ant\r\n1. Add the option `-extDir` givint it the path to the folder to where `tapfortap.ane` is located.\r\n\r\nCongratulations, you are done. You should now be able to call into the Tap for Tap library\r\nand begin displaying ads.\r\n\r\n## API Documentation\r\nThe ActionScript API lets you create and remove Tap for Tap ad views,\r\ninterstitals and app walls and set various optional information about your users\r\nto help us with targetting. Please make sure your privacy policy allows this\r\nbefore giving us their personal information.\r\n\r\n#### Preamble\r\nThe first thing you will need to do before using any of the Tap for Tap API's is\r\nto get a context to the Tap for Tap native extension. The instance is implemented\r\nas a singleton.\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n```\r\n\r\n#### initializeWithApiKey(apiKey: String): void\r\nThis method needs to be called before you can use any of the other API calls.\r\nThis method initializes your app with the TapForTap so we can begin serving \r\nyou ads.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Initialze with TapForTap with my API key\r\nvar apiKey: String = 'My API key from my TapForTap account';\r\ntft.initializeWithApiKey(apiKey);\r\n```\r\n\r\n#### createAdView(displayAtTop: Boolean): void\r\nCreate and display an ad view banner at the top or bottom of the display.\r\n\r\n##### Displaying Banner Ads\r\n\r\n###### iPhone\r\nOn iOS, banner ads are 50 points tall so at lest 50 points \r\nmust be left free at the top or bottom of the view depending on where\r\nthe ad is shown. Only one banner ad can be displayed at a time.\r\n\r\n###### Android\r\nOn Android, banner ads are `(50 * screen.density)` pixels tall so at\r\nlest `(50 * screen.density)` pixels must be left free at the top or bottom\r\nof the view depending on where the ad is shown. Only one banner ad can \r\nbe displayed at a time.\r\n\r\n###### Notes\r\nOn both platforms, when an orientation change occurs the banner\r\nad should be removed and recreated.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Create an ad view banner at the bottom of the display\r\ntft.createAdView(false);\r\n\r\n// Create an ad view banner at the top of the display\r\ntft.createAdView(true);\r\n\r\n// On orientation change remove the ad and create a new ad with\r\n// at the top\r\ntft.removeAdView();\r\ntft.createAdView(true);\r\n```\r\n\r\n#### removeAdView(): void\r\nRemoves the ad view banner from the bottom screen and stops loading ads.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Remove the ad view and stop loading ads\r\ntft.removeAdView();\r\n```\r\n\r\n#### prepareInterstitial(): void\r\nThis prepares the interstial ad type. This method only needs to be called once, \r\nafter the interstitial is shown we automatically prepare another one for you.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Prepare the insterstial ad type\r\ntft.prepareInsterstitial();\r\n```\r\n\r\n#### showInterstitial(): void\r\nThis shows an interstitial ad. Remember that you must call prepareInterstital() once\r\nbefore calling showInterstitial(). Afterwards you only need to call showInterstial()\r\nto show a new interstitial ad.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// prepare the interstitial ad type\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\ntft.prepareInterstitial();\r\n\r\n// show an interstitial ad\r\nTapForTap.showInterstitial();\r\n\r\n// do some neat app stuff\r\n  .\r\n  .\r\n  .\r\n\r\n// show another interstital ad (Note that we do not need to call\r\n// prepareInterstitial() again)\r\ntft.showInterstital();\r\n```\r\n\r\n#### prepareAppWall(): void\r\nThis prepares the app wall ad type. This method only needs to be called once, \r\nafter the app wall is shown we automatically prepare another one for you.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Prepare the app wall ad type\r\ntft.prepareAppWall();\r\n```\r\n\r\n#### showAppWall(): void\r\nThis shows an app wall ad. Remember that you must call prepareAppWall() once\r\nbefore calling showAppWall(). Afterwards you only need to call showAppWall()\r\nto show a new app wall ad.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// tft the app wall ad type\r\nTapForTap.prepareAppWall();\r\n\r\n// show an interstitial ad\r\ntft.showAppWall();\r\n\r\n// do some different neat app stuff\r\n  .\r\n  .\r\n  .\r\n\r\n// show another app wall ad (Note that we do not need to call\r\n// prepareAppWall() again)\r\ntft.showwAppWall();\r\n```\r\n\r\n#### setYearOfBirth(yearOfBirth: int): void\r\nSets the user's year of birth.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Set the year of birth\r\ntft.setYearOfBirth(1990);\r\n```\r\n\r\n#### setGender(gender: int): void\r\nSet the user's gender. There are static constants provided in the TapForTap API.\r\n  - TapForTap.GENDER_MALE\r\n  - TapForTap.GENDER_FEMALE\r\n  - TapForTap.GENDER_NONE\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Set the gender\r\ntft.setGender(TapForTap.GENDER_MALE);\r\n\r\n```\r\n\r\n#### setLocation(latitude: Number, longitude: Number): void\r\nSets the user's location in terms of latitiude and longitude.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Set the location\r\ntft.setLocation(111.1, 222.2);\r\n```\r\n\r\n#### setUserAccountId(userAccountId: String): void\r\nSets the user account id. This is a custom id that can be \r\nset to anything.\r\n\r\nUsage:\r\n\r\n```javascript\r\n// Get a reference to the Tap for Tap context\r\nvar tft: TapForTap = TapForTap.instance;\r\n\r\n// Set the user account id\r\ntft.setUserAccountId(\"the user's account Id\");\r\n```\r\n\r\n\r\n\r\n___\r\n======\r\n# Footer #\r\n\r\n## [Back To Documentaion](http://tapfortap.github.com/Documentation/) ##\r\n\r\n### *Support* ###\r\nThings don't always go according to plan. If you hit a snag somewhere and need a hand don't hesitate to get in touch with us at [support@tapfortap.com](mailto:support@tapfortap.com) or on Zendesk [here](https://tapfortap.zendesk.com/anonymous_requests/new).\r\n\r\n### *License* ###\r\nLicensed under the terms of the MIT License.\r\n\r\nCopyright &copy; 2012 Tap for Tap Promotions Inc.\r\n","google":"UA-32413960-4","name":"Adobe Air","note":"Don't delete this file! It's used internally to help with page regeneration."}